// Generated by CoffeeScript 1.9.2
(function() {
  Background.Api = (function() {
    function Api() {}

    Api.prototype.is_authorized = function(callback) {
      return chrome.storage.sync.get('ph_access_token', (function(_this) {
        return function(resp) {
          if (_this.valid_token(resp.ph_access_token)) {
            return callback(true);
          } else {
            return callback(false);
          }
        };
      })(this));
    };

    Api.prototype.authorize = function(callback) {
      return this.is_authorized((function(_this) {
        return function(authorized) {
          if (authorized) {
            return callback();
          } else {
            return _this.get_token();
          }
        };
      })(this));
    };

    Api.prototype.persist_token = function(ph_resp) {
      ph_resp.created_at = new Date().getTime();
      chrome.storage.sync.set({
        ph_access_token: ph_resp
      });
      chrome.tabs.update(Background.last_tab.id, {
        highlighted: true
      });
      return chrome.tabs.remove(Background.oauth_tab.id);
    };

    Api.prototype.retrieve_collections = function(id, callback) {
      return chrome.storage.sync.get('ph_access_token', (function(_this) {
        return function(resp) {
          var token, xhr;
          token = resp.ph_access_token;
          xhr = new XMLHttpRequest();
          xhr.open('GET', "https://api.producthunt.com/v1/posts/" + id + "/collections");
          xhr.onreadystatechange = function() {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) {
                resp = JSON.parse(xhr.responseText);
                return callback(resp.collections);
              } else {
                chrome.storage.sync.set({
                  ph_access_token: null
                });
                return callback('error');
              }
            }
          };
          xhr.setRequestHeader('Authorization', "Bearer " + token.access_token);
          return xhr.send();
        };
      })(this));
    };

    Api.prototype.valid_token = function(token) {
      return token && token.created_at + (token.expires_in * 1000) > new Date().getTime();
    };

    Api.prototype.get_token = function() {
      return chrome.tabs.query({
        active: true
      }, function(tabs) {
        Background.last_tab = tabs[0];
        return chrome.tabs.create({
          url: "http://" + Background.oauth_domain + "OAUTH_PATH"
        }, function(tab) {
          return Background.oauth_tab = tab;
        });
      });
    };

    return Api;

  })();

}).call(this);

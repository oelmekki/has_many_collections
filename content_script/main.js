// Generated by CoffeeScript 1.9.2
(function() {
  var TokenChecker;

  TokenChecker = (function() {
    function TokenChecker() {
      if (!this.has_error()) {
        if (this.access_grant()) {
          this.get_token();
        } else {
          this.error();
        }
      }
    }

    TokenChecker.prototype.get_token = function() {
      var url;
      url = new Url((this.url().domain_part()) + "/has_many_collections/get_token");
      url.set_params({
        code: this.access_grant()
      });
      return $.getJSON(url.to_s(), (function(_this) {
        return function(resp) {
          return _this.finalize(resp);
        };
      })(this));
    };

    TokenChecker.prototype.finalize = function(resp) {
      var port;
      if (resp.error) {
        return this.error();
      } else {
        port = chrome.runtime.connect({
          name: 'got_token'
        });
        return port.postMessage(resp);
      }
    };

    TokenChecker.prototype.error = function() {
      var params;
      params = this.url().get_params();
      params.error = 'no_access_grant_or_token';
      this.url().set_params(params);
      return window.location.href = this.url().to_s();
    };

    TokenChecker.prototype.has_error = function() {
      return document.querySelector('#error');
    };

    TokenChecker.prototype.url = function() {
      return this._url != null ? this._url : this._url = new Url(window.location.href);
    };

    TokenChecker.prototype.access_grant = function() {
      return this.url().get_params().code;
    };

    return TokenChecker;

  })();

  new TokenChecker();

}).call(this);
